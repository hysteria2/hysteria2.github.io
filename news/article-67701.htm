<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteria2.github.io/news/article-67701.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <!-- Webpage Title -->
    <title>ES6基础语法之class类介绍_基础知识</title>
        <meta name="description" content="一、class基本语法 JavaScript 语言中,编写一个学生类,代码如下：（prototype可以个对象添加属性和方法）  function Student(stuno,stuname)  { " />
        <link rel="icon" href="/assets/website/img/hysteria2/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Hysteria2官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hysteria2.github.io/news/article-67701.htm" />
    <meta property="og:site_name" content="Hysteria2官网订阅站" />
    <meta property="og:title" content="ES6基础语法之class类介绍_基础知识" />
    <meta property="og:image" content="https://hysteria2.github.io/uploads/20240507/7788c070b7acd07a12a887e12349cbd3.webp" />
        <meta property="og:release_date" content="2025-03-05T11:11:45" />
    <meta property="og:updated_time" content="2025-03-05T11:11:45" />
        <meta property="og:description" content="一、class基本语法 JavaScript 语言中,编写一个学生类,代码如下：（prototype可以个对象添加属性和方法）  function Student(stuno,stuname)  { " />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="ES6基础语法之class类介绍_基础知识">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Styles -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/fontawesome-all.min.css" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/swiper.css" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/styles.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-0LQ0YHE09L"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-0LQ0YHE09L');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-bs-spy="scroll" data-bs-target="#navbarExample" data-page="detail">
        <!-- Navigation -->
    <nav id="navbarExample" class="navbar navbar-expand-lg fixed-top navbar-light" aria-label="Main navigation">
        <div class="container">
            <!-- Image Logo -->
            <a class="navbar-brand logo-image" href="/">
                            <span>Hysteria2</span>
                        </a>
            <!-- Text Logo - Use this if you don't have a graphic logo -->
            <!-- <a class="navbar-brand logo-text" href="index.html">Zinc</a> -->
            <button class="navbar-toggler p-0 border-0" type="button" id="navbarSideCollapse" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse offcanvas-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav ms-auto navbar-nav-scroll">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div> <!-- end of navbar-collapse -->
        </div> <!-- end of container -->
    </nav> <!-- end of navbar -->
    <!-- end of navigation -->
    <!-- Header -->
    <header class="ex-header">
        <div class="container">
            <div class="row">
                <div class="col-xl-10 offset-xl-1">
                    <h1>ES6基础语法之class类介绍_基础知识</h1>
                    <div class="section-title">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </div>
                </div> <!-- end of col -->
            </div> <!-- end of row -->
        </div> <!-- end of container -->
    </header> <!-- end of ex-header -->
    <!-- end of header -->
    <!-- Details 1 -->
    <div id="details" class="basic-1">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h2>一、class基本语法</h2> <p>JavaScript 语言中,编写一个学生类,代码如下：（prototype可以个对象添加属性和方法）</p> <div class="ay1code"> <pre class="brush:js;">function Student(stuno,stuname)  {  	this.stuno = stuno;  	this.stuname = stuname;  }  Student.prototype.stusex = "";  Student.prototype.sayHi = function()  {  	console.log("大家好,我是"+this.stuname+",我的学号是"+this.stuno+",性别:"+this.stusex);  }  var stu = new Student("001","孙悟空");  stu.stusex = "男";  //或  // var stu = new Student();  // stu.stuno = "001";  // stu.stuname = "孙悟空";  // stu.stusex = "男";  stu.sayHi(); //大家好,我是孙悟空,我的学号是001,性别:男</pre> </div> <p>ES6提供了更接近传统语言的写法,引入了Class这个概念：</p> <p>constructor为构造函数,当创建对象的时候自动调用：</p> <div class="ay1code"> <pre class="brush:js;">class Student  {  	constructor(stuno,stuname) {  		this.stuno = stuno;  		this.stuname = stuname;  	}  	sayHi()  	{  		console.log("大家好,我是"+this.stuname+",我的学号是"+this.stuno);  	}  }  var stu = new Student("001","孙悟空");  //或  // var stu = new Student();  // stu.stuno = "001";  // stu.stuname = "孙悟空";  stu.sayHi();	//大家好,我是孙悟空,我的学号是001</pre> </div> <p>注意:类的声明第一行除了class Student外,还可以如下写法:</p> <div class="ay1code"> <pre class="brush:js;">let Student = class  let Student = class Student</pre> </div> <h2>二、类的属性和方法</h2> <p>实例属性和实例方法：</p> <div class="ay1code"> <pre class="brush:js;">class Student  {  	stuno = "";  	stuname = "";  	sayHi()  //此处方法有的地方称为原型方法  	{  		console.log("大家好,我是"+this.stuname+",我的学号是"+this.stuno);  	}  }  var stu = new Student();  stu.stuno = "001";  stu.stuname = "孙悟空";  stu.sayHi();</pre> </div> <p>静态属性和静态方法：</p> <div class="ay1code"> <pre class="brush:js;">class Student  {  	stuno = "";  	stuname = "";  	static proName = "";  //专业名称  	static proIntroduce()  	{  		console.log("专业名称:"+Student.proName);  	}  	sayHi()  	{  		console.log("大家好,我是"+this.stuname+",我的学号是"+this.stuno);  	}  }  Student.proName = "计算机";  Student.proIntroduce();</pre> </div> <h2>三、实例方法的两种写法</h2> <h3>方案一：（又称原型方法）</h3> <div class="ay1code"> <pre class="brush:js;">class Student  {  	sayHi()  	{  		console.log("hi!");  	}  }  let stu = new Student();  stu.sayHi();</pre> </div> <p>等同于ES5中：</p> <div class="ay1code"> <pre class="brush:js;">function Student(){			}  Student.prototype.sayHi=function()  {  	console.log("hi!");  }  var stu = new Student();  stu.sayHi();</pre> </div> <h3>方案二：</h3> <div class="ay1code"> <pre class="brush:js;">class Student  {  	constructor()  	{  		this.sayHi = function()  		{  			console.log("hi");  		}  	}  }  let stu = new Student();  stu.sayHi();</pre> </div> <p>等同于ES5中：</p> <div class="ay1code"> <pre class="brush:js;">function Student()  {  	this.sayHi = function()  	{  		console.log("hi");  	}  }  var stu = new Student();  stu.sayHi();</pre> </div> <p>当两个方案冲突的时候,constructor里面的函数会覆盖外面的函数：</p> <div class="ay1code"> <pre class="brush:js;">class Student  {  	sayHi()  //等同Student.prototype.sayHi=function(){...}  	{  		console.log("hi!");  	}  	constructor()  	{  		this.sayHi = function() //等同在function内部定义  		{  			console.log("hello!");  		}  	}  }  let stu = new Student();  stu.sayHi(); //hello!</pre> </div> <p>等同于ES5中：</p> <div class="ay1code"> <pre class="brush:js;">function Student()  {  	this.sayHi = function()  	{  		console.log("hello!");  	}  }  Student.prototype.sayHi=function()  {  	console.log("hi!");  }  var stu = new Student();  stu.sayHi(); //hello!</pre> </div> <h2>四、class属性封装</h2> <p>在类的内部可以使用get和set关键字,对某个属性设置存值函数和取值函数,拦截该属性的存取行为。</p> <div class="ay1code"> <pre class="brush:js;">class Student  {  	get stuAge(){  		return this._stuAge;  	}  	set stuAge(age)  	{  		if(age &gt;= 18 &amp;&amp; age &lt;= 120)  			this._stuAge = age;  		else  		{  			this._stuAge = 18;  			console.log("年龄有错误,设置默认值18!");  		}  	}  }  let stu = new Student();  stu.stuAge = 17;   //年龄有错误,设置默认值18!  console.log(stu.stuAge); //18  //------------------------------------------------------------------------------  //注意:  //(1)在get和set后的属性名不能和函数里的取值和设置值的变量名相同(stuAge和_stuAge)  //(2)getter不可单独出现  //(3)getter与setter必须同级出现(不能一个在父类,一个在子类)</pre> </div> <h2>五、继承</h2> <p>通过 extends 实现类的继承。</p> <div class="ay1code"> <pre class="brush:js;">//通过 extends 实现类的继承。  class People //父类  {  	name = "";  	sex = "";  	age = 0;  	sayHi()  	{  		console.log(`姓名:${this.name},性别:${this.sex},年龄:${this.age}`);  	}  }  class Student extends People  //子类继承父类,拥有父类的属性和方法  {  	  }  class Teacher extends People //子类继承父类,拥有父类的属性和方法  {  	salary = 0; //子类在父类基础上扩展一个属性  	sayHi() //子类在父类基础上重写父类方法  	{  		console.log(`姓名:${this.name},性别:${this.sex},年龄:${this.age},月薪:${this.salary}`);  	}  }  let stu = new Student();  stu.name = "孙悟空";  stu.sex = "男";  stu.age = 500;  stu.sayHi(); //姓名:孙悟空,性别:男,年龄:500    let tc = new Teacher();  tc.name = "唐僧";  tc.sex = "男";  tc.age = 100;  tc.salary = 6000;  tc.sayHi(); //姓名:唐僧,性别:男,年龄:100,月薪:6000</pre> </div> <h2>六、继承和构造方法</h2> <p>子类通过super()调用父类构造方法：</p> <div class="ay1code"> <pre class="brush:js;">class People  {  	constructor(name,sex,age)  	{  		this.name = name;  		this.sex = sex;  		this.age = age;  	}  	sayHi()  	{  		console.log(`姓名:${this.name},性别:${this.sex},年龄:${this.age}`);  	}  }  class Student extends People  {  	constructor(name,sex,age)  	{  		super(name,sex,age);  	}  }  class Teacher extends People  {  	constructor(name,sex,age,salary)  	{  		super(name,sex,age);  		this.salary = salary;  	}  	sayHi()  	{  		console.log(`姓名:${this.name},性别:${this.sex},年龄:${this.age},月薪:${this.salary}`);  	}  }  let stu = new Student("孙悟空","男",500);  stu.sayHi(); //姓名:孙悟空,性别:男,年龄:500    let tc = new Teacher("唐僧","男",100,6000);  tc.sayHi();	//姓名:唐僧,性别:男,年龄:100,月薪:6000  //------------------------------------------------  //注意:  //(1)子类 constructor 方法中必须有 super ，且必须出现在 this 之前。  //(2)调用父类构造函数,只能出现在子类的构造函数。  //	例如在sayHi()中调用super就会报错;</pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-67045.htm">农大动物医院预约挂号 农大动物医院预约挂号时间</a></p>
                                        <p>下一个：<a href="/news/article-67703.htm">小孩被猫爪子划破出血需要***吗（小孩被猫爪子划破出血需要***吗大概多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-57502.htm" title="兽用疫苗放一晚上还能用吗有毒吗（兽用疫苗可以放家用冰箱里吗）">兽用疫苗放一晚上还能用吗有毒吗（兽用疫苗可以放家用冰箱里吗）</a></li>
                        <li class="py-2"><a href="/news/article-45970.htm" title="动物疫苗接种间隔多久（动物疫苗接种间隔多久打一次）">动物疫苗接种间隔多久（动物疫苗接种间隔多久打一次）</a></li>
                        <li class="py-2"><a href="/news/article-45463.htm" title="动物医院照片墙标语（动物医院宣传海报）">动物医院照片墙标语（动物医院宣传海报）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-26-free-shadowrocket-node.htm" title="2月26日|最高速度20M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">2月26日|最高速度20M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-18-free-subscribe-node.htm" title="2月18日|最高速度23M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">2月18日|最高速度23M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-4-free-ssr-subscribe.htm" title="2月4日|最高速度22M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">2月4日|最高速度22M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-clash-v2ray-ss-ssr.htm" title="1月6日|最高速度20.4M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">1月6日|最高速度20.4M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-35437.htm" title="流感最常见的并发症是肺炎（真没想到）流感引发肺炎多久会好，后厨演员表，胡洋，">流感最常见的并发症是肺炎（真没想到）流感引发肺炎多久会好，后厨演员表，胡洋，</a></li>
                        <li class="py-2"><a href="/news/article-68317.htm" title="免费领养狗狗正规网站平台有哪些软件呢（免费领养狗狗app）">免费领养狗狗正规网站平台有哪些软件呢（免费领养狗狗app）</a></li>
                        <li class="py-2"><a href="/news/article-41984.htm" title="专卖宠物的软件（专卖宠物的软件叫什么）">专卖宠物的软件（专卖宠物的软件叫什么）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div> <!-- end of container -->
    </div> <!-- end of basic-1 -->
    <!-- end of details 1 -->
    
        <!-- Copyright -->
    <div class="copyright bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    <ul class="list-unstyled li-space-lg p-small">
                        <li><a href="#">Article Details</a></li>
                        <li><a href="#">Terms & Conditions</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                    </ul>
                </div> <!-- end of col -->
                <div class="col-lg-6">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        <a href="/">Hysteria2官网订阅站</a> 版权所有 Powered by WordPress
                    </p>
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
        </div> <!-- end of container -->
    </div> <!-- end of copyright -->
    <!-- end of copyright -->
    <!-- Back To Top Button -->
    <button onclick="topFunction()" id="myBtn">
        <img src="/assets/website/img/hysteria2/up-arrow.png" alt="alternative">
    </button>
    <!-- end of back to top button -->
    <!-- Scripts -->
    <script src="/assets/website/js/frontend/hysteria2/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2/bootstrap.min.js"></script> <!-- Bootstrap framework -->
    <script src="/assets/website/js/frontend/hysteria2/swiper.min.js"></script> <!-- Swiper for image and text sliders -->
    <script src="/assets/website/js/frontend/hysteria2/purecounter.min.js"></script> <!-- Purecounter counter for statistics numbers -->
    <script src="/assets/website/js/frontend/hysteria2/isotope.pkgd.min.js"></script> <!-- Isotope for filter -->
    <script src="/assets/website/js/frontend/hysteria2/scripts.js"></script> <!-- Custom scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>