<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteria2.github.io/news/article-32736.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <!-- Webpage Title -->
    <title>Python生成迷宫</title>
        <meta name="description" content="算法简介:   生成一张网格，把网格里面的所有边都存进一个列表edgeList里面.   从(0, 0)开始，做DFS。每次DFS的时候，随机地选择四周一个没有走过的格子，凿墙过去，把道路打通。凿墙的" />
        <link rel="icon" href="/assets/website/img/hysteria2/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Hysteria2官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hysteria2.github.io/news/article-32736.htm" />
    <meta property="og:site_name" content="Hysteria2官网订阅站" />
    <meta property="og:title" content="Python生成迷宫" />
    <meta property="og:image" content="https://hysteria2.github.io/uploads/20240507/ad6ef8360716b22fc8526a2895fbfd68.webp" />
        <meta property="og:release_date" content="2024-12-29T05:24:27" />
    <meta property="og:updated_time" content="2024-12-29T05:24:27" />
        <meta property="og:description" content="算法简介:   生成一张网格，把网格里面的所有边都存进一个列表edgeList里面.   从(0, 0)开始，做DFS。每次DFS的时候，随机地选择四周一个没有走过的格子，凿墙过去，把道路打通。凿墙的" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python生成迷宫">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Styles -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/fontawesome-all.min.css" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/swiper.css" rel="stylesheet">
    <link href="/assets/website/css/hysteria2/styles.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-0LQ0YHE09L"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-0LQ0YHE09L');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-bs-spy="scroll" data-bs-target="#navbarExample" data-page="detail">
        <!-- Navigation -->
    <nav id="navbarExample" class="navbar navbar-expand-lg fixed-top navbar-light" aria-label="Main navigation">
        <div class="container">
            <!-- Image Logo -->
                        <a class="navbar-brand logo-image" href="/">
                Hysteria2节点
            </a>
                        <!-- Text Logo - Use this if you don't have a graphic logo -->
            <!-- <a class="navbar-brand logo-text" href="index.html">Zinc</a> -->
            <button class="navbar-toggler p-0 border-0" type="button" id="navbarSideCollapse" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse offcanvas-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav ms-auto navbar-nav-scroll">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="#">关于</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">联系</a>
                    </li>
                </ul>
            </div> <!-- end of navbar-collapse -->
        </div> <!-- end of container -->
    </nav> <!-- end of navbar -->
    <!-- end of navigation -->
    <!-- Header -->
    <header class="ex-header">
        <div class="container">
            <div class="row">
                <div class="col-xl-10 offset-xl-1">
                    <h1>Python生成迷宫</h1>
                    <div class="section-title">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </div>
                </div> <!-- end of col -->
            </div> <!-- end of row -->
        </div> <!-- end of container -->
    </header> <!-- end of ex-header -->
    <!-- end of header -->
    <!-- Details 1 -->
    <div id="details" class="basic-1">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <p>算法简介:</p> <ol> <li> <p>生成一张网格，把网格里面的所有边都存进一个列表edgeList里面.</p> </li> <li> <p>从(0, 0)开始，做DFS。每次DFS的时候，随机地选择四周一个没有走过的格子，凿墙过去，把道路打通。凿墙的时候，把edgeList列表中相对应的那堵墙删除掉。</p> </li> <li> <p>将剩下的没有凿开过的墙画出来，就是一个完整的迷宫了。</p> </li> </ol> <pre><code class="prism language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot<span class="token keyword">as</span> plt<span class="token keyword">from</span> random<span class="token keyword">import</span> randint  WIDTH<span class="token operator">=</span><span class="token number">60</span> HEIGHT<span class="token operator">=</span><span class="token number">40</span> sys<span class="token punctuation">.</span>setrecursionlimit<span class="token punctuation">(</span>WIDTH<span class="token operator">*</span> HEIGHT<span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">initVisitedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 	visited<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> y<span class="token keyword">in</span><span class="token builtin">range</span><span class="token punctuation">(</span>HEIGHT<span class="token punctuation">)</span><span class="token punctuation">:</span> 		line<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> x<span class="token keyword">in</span><span class="token builtin">range</span><span class="token punctuation">(</span>WIDTH<span class="token punctuation">)</span><span class="token punctuation">:</span> 			line<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> 		visited<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token keyword">return</span> visited<span class="token keyword">def</span><span class="token function">drawLine</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">:</span> 	plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>y1<span class="token punctuation">,</span> y2<span class="token punctuation">]</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"black"</span><span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">removeLine</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">:</span> 	plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>y1<span class="token punctuation">,</span> y2<span class="token punctuation">]</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">get_edges</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span> 	result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span> 	result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span> 	result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> result<span class="token keyword">def</span><span class="token function">drawCell</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span> 	edges<span class="token operator">=</span> get_edges<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token keyword">for</span> item<span class="token keyword">in</span> edges<span class="token punctuation">:</span> 		drawLine<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">getCommonEdge</span><span class="token punctuation">(</span>cell1_x<span class="token punctuation">,</span> cell1_y<span class="token punctuation">,</span> cell2_x<span class="token punctuation">,</span> cell2_y<span class="token punctuation">)</span><span class="token punctuation">:</span> 	edges1<span class="token operator">=</span> get_edges<span class="token punctuation">(</span>cell1_x<span class="token punctuation">,</span> cell1_y<span class="token punctuation">)</span> 	edges2<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span>get_edges<span class="token punctuation">(</span>cell2_x<span class="token punctuation">,</span> cell2_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> edge<span class="token keyword">in</span> edges1<span class="token punctuation">:</span><span class="token keyword">if</span> edge<span class="token keyword">in</span> edges2<span class="token punctuation">:</span><span class="token keyword">return</span> edge<span class="token keyword">return</span><span class="token boolean">None</span><span class="token keyword">def</span><span class="token function">initEdgeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 	edges<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> x<span class="token keyword">in</span><span class="token builtin">range</span><span class="token punctuation">(</span>WIDTH<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> y<span class="token keyword">in</span><span class="token builtin">range</span><span class="token punctuation">(</span>HEIGHT<span class="token punctuation">)</span><span class="token punctuation">:</span> 			cellEdges<span class="token operator">=</span> get_edges<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token keyword">for</span> edge<span class="token keyword">in</span> cellEdges<span class="token punctuation">:</span> 				edges<span class="token punctuation">.</span>add<span class="token punctuation">(</span>edge<span class="token punctuation">)</span><span class="token keyword">return</span> edges<span class="token keyword">def</span><span class="token function">isValidPosition</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> x<span class="token operator">&lt;</span><span class="token number">0</span><span class="token keyword">or</span> x<span class="token operator">&gt;=</span> WIDTH<span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">False</span><span class="token keyword">elif</span> y<span class="token operator">&lt;</span><span class="token number">0</span><span class="token keyword">or</span> y<span class="token operator">&gt;=</span> HEIGHT<span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">False</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">True</span><span class="token keyword">def</span><span class="token function">shuffle</span><span class="token punctuation">(</span>dX<span class="token punctuation">,</span> dY<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> t<span class="token keyword">in</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 		i<span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> 		j<span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> 		dX<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dX<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span> dX<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dX<span class="token punctuation">[</span>i<span class="token punctuation">]</span> 		dY<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dY<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span> dY<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dY<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">def</span><span class="token function">DFS</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> edgeList<span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">:</span> 	dX<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> 	dY<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span> 	shuffle<span class="token punctuation">(</span>dX<span class="token punctuation">,</span> dY<span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token keyword">in</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>dX<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 		nextX<span class="token operator">=</span> X<span class="token operator">+</span> dX<span class="token punctuation">[</span>i<span class="token punctuation">]</span> 		nextY<span class="token operator">=</span> Y<span class="token operator">+</span> dY<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">if</span> isValidPosition<span class="token punctuation">(</span>nextX<span class="token punctuation">,</span> nextY<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token keyword">not</span> visited<span class="token punctuation">[</span>nextY<span class="token punctuation">]</span><span class="token punctuation">[</span>nextX<span class="token punctuation">]</span><span class="token punctuation">:</span> 				visited<span class="token punctuation">[</span>nextY<span class="token punctuation">]</span><span class="token punctuation">[</span>nextX<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">True</span> 				commonEdge<span class="token operator">=</span> getCommonEdge<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> nextX<span class="token punctuation">,</span> nextY<span class="token punctuation">)</span><span class="token keyword">if</span> commonEdge<span class="token keyword">in</span> edgeList<span class="token punctuation">:</span> 					edgeList<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>commonEdge<span class="token punctuation">)</span> 				DFS<span class="token punctuation">(</span>nextX<span class="token punctuation">,</span> nextY<span class="token punctuation">,</span> edgeList<span class="token punctuation">,</span> visited<span class="token punctuation">)</span>  plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">'equal'</span><span class="token punctuation">)</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Maze'</span><span class="token punctuation">)</span> edgeList<span class="token operator">=</span> initEdgeList<span class="token punctuation">(</span><span class="token punctuation">)</span> visited<span class="token operator">=</span> initVisitedList<span class="token punctuation">(</span><span class="token punctuation">)</span> DFS<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> edgeList<span class="token punctuation">,</span> visited<span class="token punctuation">)</span> edgeList<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> edgeList<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token punctuation">(</span>WIDTH<span class="token punctuation">,</span> HEIGHT<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> WIDTH<span class="token punctuation">,</span> HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> edge<span class="token keyword">in</span> edgeList<span class="token punctuation">:</span> 	drawLine<span class="token punctuation">(</span>edge<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> edge<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> edge<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> edge<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-32261.htm">天旺宠物医院（天宠宠物医院电话）</a></p>
                                        <p>下一个：<a href="/news/article-32737.htm">Linux  C++  实现一个简易版的ping （也就是ICMP协议）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-6-free-subscribe-node.htm" title="12月6日|最高速度20.1M/S，2024最新Hysteria2免费节点高速订阅链接，便宜机场推荐">12月6日|最高速度20.1M/S，2024最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-31778.htm" title="Python：数组添加数据和删除数据">Python：数组添加数据和删除数据</a></li>
                        <li class="py-2"><a href="/news/article-48912.htm" title="Kafka启动后进程过一段时间自己消失，问题解决">Kafka启动后进程过一段时间自己消失，问题解决</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-31-free-v2ray.htm" title="1月31日|最高速度19.6M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">1月31日|最高速度19.6M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-44478.htm" title="springboot+jpa 实现不同数据库的多数据源配置">springboot+jpa 实现不同数据库的多数据源配置</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-26-node-share-links.htm" title="12月26日|最高速度18.5M/S，2024最新Hysteria2免费节点高速订阅链接，便宜机场推荐">12月26日|最高速度18.5M/S，2024最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-24-shadowrocket-node.htm" title="1月24日|最高速度19.9M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">1月24日|最高速度19.9M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-16-shadowrocket-node.htm" title="1月16日|最高速度21.2M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐">1月16日|最高速度21.2M/S，2025最新Hysteria2免费节点高速订阅链接，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-33232.htm" title="动物疫苗的使用方法视频教程大全集（动物疫苗制作流程）">动物疫苗的使用方法视频教程大全集（动物疫苗制作流程）</a></li>
                        <li class="py-2"><a href="/news/article-23360.htm" title="新手养狗攻略（最全的新手养狗攻略）">新手养狗攻略（最全的新手养狗攻略）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div> <!-- end of container -->
    </div> <!-- end of basic-1 -->
    <!-- end of details 1 -->
    
        <!-- Copyright -->
    <div class="copyright bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    <ul class="list-unstyled li-space-lg p-small">
                        <li><a href="#">Article Details</a></li>
                        <li><a href="#">Terms & Conditions</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                    </ul>
                </div> <!-- end of col -->
                <div class="col-lg-6">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        <a href="/">Hysteria2官网订阅站</a> 版权所有 Powered by WordPress
                    </p>
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
        </div> <!-- end of container -->
    </div> <!-- end of copyright -->
    <!-- end of copyright -->
    <!-- Back To Top Button -->
    <button onclick="topFunction()" id="myBtn">
        <img src="/assets/website/img/hysteria2/up-arrow.png" alt="alternative">
    </button>
    <!-- end of back to top button -->
    <!-- Scripts -->
    <script src="/assets/website/js/frontend/hysteria2/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2/bootstrap.min.js"></script> <!-- Bootstrap framework -->
    <script src="/assets/website/js/frontend/hysteria2/swiper.min.js"></script> <!-- Swiper for image and text sliders -->
    <script src="/assets/website/js/frontend/hysteria2/purecounter.min.js"></script> <!-- Purecounter counter for statistics numbers -->
    <script src="/assets/website/js/frontend/hysteria2/isotope.pkgd.min.js"></script> <!-- Isotope for filter -->
    <script src="/assets/website/js/frontend/hysteria2/scripts.js"></script> <!-- Custom scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>